{"version":3,"sources":["../src/aplus_highlightcode.js"],"names":["define","$","hljs","fn","highlightCode","each","codeBlock","clone","wrapper","append","replaceWith","highlightBlock","pre","lines","html","split","list","addClass","i","length"],"mappings":"AAcAA,OAAM,mCAAC,CAAC,QAAD,CAAW,uBAAX,CAAD,CAAsC,SAASC,CAAT,CAAYC,CAAZ,CAAkB,CAQ9DD,CAAC,CAACE,EAAF,CAAKC,aAAL,CAAqB,UAAkB,CAErC,MAAO,MAAKC,IAAL,CAAU,UAAW,IACtBC,CAAAA,CAAS,CAAGL,CAAC,CAAC,IAAD,CAAD,CAAQM,KAAR,EADU,CAEtBC,CAAO,CAAGP,CAAC,CAAC,aAAD,CAFW,CAG1BO,CAAO,CAACC,MAAR,CAAeH,CAAf,EACAL,CAAC,CAAC,IAAD,CAAD,CAAQS,WAAR,CAAoBF,CAApB,EAkCAN,CAAI,CAACS,cAAL,CAAoBL,CAAS,CAAC,CAAD,CAA7B,EAMA,OAHIM,CAAAA,CAAG,CAAGX,CAAC,CAACK,CAAD,CAGX,CAFIO,CAAK,CAAGD,CAAG,CAACE,IAAJ,GAAWC,KAAX,CAAiB,aAAjB,CAEZ,CADIC,CAAI,CAAGf,CAAC,CAAC,UAAD,CAAD,CAAcgB,QAAd,CAAuB,KAAvB,CACX,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIL,CAAK,CAACM,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACpCF,CAAI,CAACP,MAAL,CAAY,sCAAsCS,CAAtC,CAA0C,yBAA1C,CAAoEL,CAAK,CAACK,CAAC,CAAG,CAAL,CAAzE,CAAmF,YAA/F,CACH,CACDN,CAAG,CAACE,IAAJ,CAASE,CAAT,CACD,CAhDM,CAiDR,CAnDD,CAqDA,MAAO,EACN,CA9DK,CAAN","sourcesContent":["/**\n * A+ helper function for elements that show source code with syntax highlighting.\n * Syntax highlighting uses the highlight.js library.\n * This function adds line numbers\n * (and a copy-to-clipboard button (copying disabled since it requires clipboard.js)).\n *\n * Usage:\n * $(element).highlightCode();\n *\n * Source: A+ (a-plus/assets/js/aplus.js)\n * License: GNU GPL v3\n *\n * @module mod_adastra/aplus_highlightcode\n */\ndefine(['jquery', 'mod_adastra/highlight'], function($, hljs) {\n\n/**\n * Highlights code element.\n */\n\n//var copyTargetCounter = 0;\n\n$.fn.highlightCode = function(options) {\n\n  return this.each(function() {\n    var codeBlock = $(this).clone();\n    var wrapper = $('<div></div>');\n    wrapper.append(codeBlock);\n    $(this).replaceWith(wrapper);\n\n    // Use $(element).highlightCode{noCopy: true} to prevent copy button\n    /* // disabled due to dependency on clipboard.js\n    if (!options || !options.noCopy) {\n      var buttonContainer = $('<p></p>').prependTo(wrapper);\n      var copyButtonContent = $('<span class=\"glyphicon glyphicon-copy\" aria-hidden=\"true\"></span>');\n      var copyButtonText = $('<span></span>').text('Copy to clipboard');\n      var copyButton = $('<button data-clipboard-target=\"#clipboard-content-' + copyTargetCounter + '\" class=\"btn btn-xs btn-primary\" id=\"copy-button-' + copyTargetCounter + '\"></button>');\n      copyButtonContent.appendTo(copyButton);\n      copyButtonText.appendTo(copyButton);\n      copyButton.appendTo(buttonContainer);\n\n      var hiddenTextarea = $('<textarea id=\"clipboard-content-' + copyTargetCounter + '\" style=\"display: none; width: 1px; height: 1px;\"></textarea>').text(codeBlock.text());\n      hiddenTextarea.appendTo(buttonContainer);\n\n      // clipboard.js cannot copy from invisible elements\n      copyButton.click(function() {\n        hiddenTextarea.show();\n      });\n\n      var clipboard = new Clipboard('#copy-button-' + copyTargetCounter);\n      clipboard.on(\"error\", function(e) {\n          hiddenTextarea.hide();\n      });\n      clipboard.on(\"success\", function(e) {\n          hiddenTextarea.hide();\n      });\n\n      copyTargetCounter += 1;\n\n    }\n    */\n\n    hljs.highlightBlock(codeBlock[0]);\n\n    // Add line numbers.\n    var pre = $(codeBlock);\n    var lines = pre.html().split(/\\r\\n|\\r|\\n/g);\n    var list = $(\"<table/>\").addClass(\"src\");\n    for (var i = 1; i <= lines.length; i++) {\n        list.append('<tr><td class=\"num unselectable\">' + i + '</td><td class=\"src\">' + lines[i - 1] + '</td></tr>');\n    }\n    pre.html(list);\n  });\n};\n\nreturn {}; // for AMD, no names are exported to the outside\n}); // end define\n"],"file":"aplus_highlightcode.min.js"}